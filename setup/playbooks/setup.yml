---
- hosts: localhost
  gather_facts: true
  vars_files:
    - vars/main.yml

  vars_prompt:
    - name: use_custom_conda_env
      prompt: "Do you want to use a custom, self-managed conda environment? Select (no) to automatically setup. (yes/no)"
      private: false

  pre_tasks:
    - name: Check current npm registry
      command: npm config get registry
      register: current_registry
      changed_when: false
      failed_when: false

    - name: Prompt for GitHub npm registry token
      pause:
        prompt: "Enter your GitHub token to registry the @c3-e npm scope (leave blank and hit enter to skip)"
      register: github_token_input

    - name: Delete existing .envrc.local file
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../../.envrc.local"
        state: absent
      ignore_errors: true

    - name: Set environment variable to indicate if custom conda environment is to be used
      ansible.builtin.lineinfile:
        path: "{{ playbook_dir }}/../../.envrc.local"
        line: "export C3_STD_CUSTOM_CONDA=true"
        create: yes
      when: use_custom_conda_env == "yes"

  tasks:
    - set_fact:
        github_token: "{{ github_token_input.user_input | default('') }}"
      when: github_token_input is defined

    - block:
      - name: Include workstation role
        include_role:
          name: workstation
      become: false

    - block:
      - name: Add GitHub npm registry for @c3-e organization
        include_role:
          name: npm-registry
      become: false

    - block:
      - name: Include direnv role
        include_role:
          name: direnv
      become: false

    - block:
      - name: Include nodejs role
        include_role:
          name: nodejs
      become: false

    - block:
      - name: Include conda role
        include_role:
          name: conda
      when: use_custom_conda_env != "yes"
      become: false

    - block:
      - name: Include pylint role
        include_role:
          name: pylint
      become: false
